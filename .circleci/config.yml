# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#

version: 2
workflows:
  version: 2
  test:
    jobs:
      - test-3.6
      - test-2.7
jobs:
  test-3.6:
    docker:
      - image: circleci/python:3.6.5

    working_directory: ~/repo

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            make test

      - store_artifacts:
          path: test-reports
          destination: test-reports
  # Based on answer https://discuss.circleci.com/t/run-tests-on-multiple-versions-of-python/15462
  test-2.7:
    docker:
      - image: edxops/edxapp:hawthorn.master
    working_directory: ~/repo27

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - python27-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - python27-dependencies-

      - run:
          name: install dependencies
          command: |
            mkdir -p ./venv
            virtualenv ./venv
            . venv/bin/activate
            mv /root/.pip/pip.conf ~/pip.conf
            pip install -r requirements.txt
            mv ~/pip.conf /root/.pip/pip.conf
      - save_cache:
          paths:
            - ./venv
          key: python27-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: run unit tests
          command: |
            . venv/bin/activate
            make test

      - run:
          name: install on hawthorn
          command: |
            source /edx/app/edxapp/venvs/edxapp/bin/activate
            pip install -e .

      - run:
          name: run tests hawthorn
          command: |
            source /edx/app/edxapp/venvs/edxapp/bin/activate
            make test

      - store_artifacts:
          path: test-reports
          destination: test-reports
